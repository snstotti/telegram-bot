const TelegramApi = require('node-telegram-bot-api')

const token = '1925452654:AAFtRbRRnXV8nV9UIE4ulCgcB4MnU7UWXRc'

const bot = new TelegramApi(token, { polling: true })

bot.setMyCommands([
    {command: '/start', description:'–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã'},
    {command: '/keyboard', description:'–í—ã–∑–≤–∞—Ç—å –∫–ª–∞–≤–º–∞—Ç—É—Ä—É'},
])

const completedOrders = [
    {
        order: 1, 
        address:'–í–≤–µ–¥–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å', 
        phone:'9998881214', 
        comment:'–í–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–º–µ–Ω—Ç',
        status:'–í–≤–µ–¥—ë–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    },
    {
        order: 2, 
        address:'–í–≤–µ–¥–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å', 
        phone:'9998881214', 
        comment:'–í–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–º–µ–Ω—Ç',
        status:'–í–≤–µ–¥—ë–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    },
    {
        order: 3, 
        address:'–í–≤–µ–¥–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å', 
        phone:'9998881214', 
        comment:'–í–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–º–µ–Ω—Ç',
        status:'–í–≤–µ–¥—ë–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    },
]

const arrSupport = []

const idAdminPanel = -1001203491315

const objbtnTitle = [
    {textBtn:'–ë–∏–≥–ë—É—Ä–≥–µ—Ä –º–µ–Ω—é', callbackData: 'burgerMenu'},
    {textBtn:'–§–∏—Ç–Ω–µ—Å –º–µ–Ω—é', callbackData: 'fitnesMenu'},
    {textBtn:'–ú—è—Å–Ω–æ–µ –º–µ–Ω—é', callbackData: 'meanMenu'},
    {textBtn:'–ù–∞–≥–µ—Ç—ã –ú–µ–Ω—é', callbackData: 'nagetsMenu'},
]

const start = () => {
    
    bot.on('message', async (msg, t) => {
        const text = msg.text
        const chatId = msg.chat.id
        const userName = msg.from.username
        // console.log(msg);
        const opts = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ú–µ–Ω—éüçî', callback_data: 'menu' },
                    { text: '–ú–æ–∏ –∑–∞–∫–∞–∑—ãüìú', callback_data: 'order' }],

                    [{ text: '–ü—Ä–æ–º–æ-–∫–æ–¥üåü', callback_data: 'promo' },
                    { text: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞üë®‚Äçüíª', callback_data: 'support' }]
                ]
            }
        }
      
        if (text === '/start') {
            return bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @${userName} ! –Ø @test2107Foodbot —Å –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–µ—Å—Ç—å –±—ã—Å—Ç—Ä–æ –∏ –≤–∫—É—Å–Ω–æ üòã`,opts)
        }
        if (text === '/keyboard') {
            return bot.sendMessage(chatId, 'keyboard', opts)
        }
        if (text.toLowerCase().includes('support')) {
            
            await bot.sendMessage(idAdminPanel, text.replace(/support/g,''))
            return bot.sendMessage(chatId, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
            
        }
        return bot.sendMessage(chatId, '–ù–µ –≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
        
    })
    ////////////////////////////////////////////////////////////////////

    bot.on('callback_query', async el => {
        
        const chatId = el.message.chat.id
        const callbackData = el.data
        // console.log(callbackData);
        const showOrders = (arr) => {
            arr.map(el => {
                return bot.sendMessage(
                    chatId,
                    `
                    <b>–ó–∞–∫–∞–∑‚Ññ:</b> ${el.order}
                    <b>–ê–¥—Ä–µ—Å:</b> ${el.address}
                    <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${el.phone}
                    <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${el.comment}
                    <b>–°—Ç–∞—Ç—É—Å:</b> ${el.status}
                    `,
                    { parse_mode: 'HTML' })
            })
        }
        const supportResponse=()=>{
            bot.sendMessage(chatId,
                 `–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞—à–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                (–ü–µ—Ä–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É "support")`)
        }
        const promoCode=()=>{
            
            const subscribeBtn = {
                reply_markup: {
                    inline_keyboard: [[{ text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', callback_data: 'subscribe' }]]
                }
            }
            bot.sendMessage(chatId,
                 `–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã`,subscribeBtn)
        }
        const menuShow=()=>{
            const menuBtn = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '–ú–µ–Ω—é', callback_data: 'menuBtn' }],
                        [{ text: '–ü–∏—Ü—Ü–∞', callback_data: 'pizza' }],
                        [{ text: '–ë—É—Ä–≥–µ—Ä—ã', callback_data: 'burger' }],
                        [{ text: '–ù–∞–ø–∏—Ç–∫–∏', callback_data: 'drink' }],
                    ]
                }
            }
            bot.sendMessage(chatId,`–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω–µ—Ç–µ—Ä–µ—Å—É–µ—Ç?`,menuBtn)
           
        }
        const subMenuShow=(textBtn,callbackData)=>{
            const btn = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: textBtn, callback_data: callbackData }],
                        
                    ]
                }
            }
            const url = './img/burger.jpg';
            bot.sendPhoto(chatId, './img/burger.jpg',btn);
        }
        const backBtn =()=>{
            const back = {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'BACK', callback_data: 'btnBack' }],
                    ]
                }
            }
            bot.sendMessage(chatId,'–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥',back)
        }

        
        switch (callbackData) {
            case 'order':
                return showOrders(completedOrders)
                
            case 'menu':
                return menuShow()
              
            case 'promo':
                return promoCode()
              
            case 'support':
                return supportResponse()
                
            case 'subscribe':
                return bot.sendMessage(chatId, '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!')

            case 'menuBtn':
                await backBtn()
                return objbtnTitle.map(el=>subMenuShow(el.textBtn,el.callbackData))

            case 'pizza':
                return bot.sendMessage(chatId, 'pizza!')
            case 'burger':
                return bot.sendMessage(chatId, 'burger!')
            case 'drink':
                return bot.sendMessage(chatId, 'drink!')
              
            default:
                return bot.sendMessage(chatId, 'fuck')
        }

        
           
    })
    
}

start()